{"version":3,"sources":["model/User.js","utils/auth.js","components/header/Header.js","components/highcharts/StockChart.js","components/highcharts/LoadingSpinner.js","components/alert/Unavailable.js","components/alert/Info.js","utils/requests.js","components/highcharts/Wrapper.js","components/highcharts/WatchlistCharts.js","components/alert/Notfound.js","components/alert/Error.js","components/user/Login.js","components/user/Register.js","components/user/Setting.js","components/user/Watchlist.js","index.js"],"names":["User","id","username","firstName","lastName","isAuth","stocks","this","stock","push","isAuthenticated","localStorage","getItem","setSession","user","setItem","getIsAuth","getId","getUsername","getFirstName","getLastName","JSON","stringify","getStocks","Header","props","state","url","firstname","lastname","symbols","companies","data","dataType","searchText","searchValue","searchDisabled","searchStock","bind","handleChange","logout","toggleChange","event","undefined","setState","encodeURIComponent","process","fetch","resp","status","json","Error","history","parse","company","symbol","e","preventDefault","getSymbolForCompany","clear","prepareSearchbar","navbar","Navbar","sticky","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","Form","inline","onSubmit","ToggleButtonGroup","type","name","defaultValue","onChange","ToggleButton","value","options","flip","placeholder","Button","disabled","onClick","React","Component","withRouter","StockChart","prices","currentPrice","companyName","chartOptions","title","series","colors","chart","backgroundColor","linearGradient","x1","y1","x2","y2","stops","style","fontFamily","plotBorderColor","subtitle","color","textTransform","xAxis","gridLineColor","labels","lineColor","minorGridLineColor","tickColor","yAxis","tickWidth","tooltip","plotOptions","dataLabels","fontSize","marker","boxplot","fillColor","candlestick","errorbar","legend","itemStyle","itemHoverStyle","itemHiddenStyle","credits","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","theme","fill","rangeSelector","buttonTheme","stroke","states","hover","select","inputBoxBorderColor","inputStyle","labelStyle","selected","navigator","handles","borderColor","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","high","low","text","reverse","prepareChart","prevProps","highcharts","Highcharts","constructorType","LoadingSpinner","Spinner","animation","size","Unavailable","Alert","Heading","message","Info","header","post","a","method","mode","headers","body","del","put","Wrapper","error","btnDisable","btnText","addUserStock","checkStockInWatchlist","api","userId","includes","fetchData","hasOwnProperty","stockCharts","dow","forEach","d","Fragment","ButtonToolbar","WatchlistCharts","watchlist","length","alert","charts","Notfound","Login","password","login","toRegister","target","trim","toLowerCase","user_id","Group","Label","Control","Register","register","toLogin","charAt","toUpperCase","slice","Setting","ogUsername","errMessage","update","Watchlist","prevStocks","deleteUserStock","dataset","i","splice","Array","temp","lists","s","ListGroup","Item","data-stock","card","Card","yearly_api","dow30_api","watchlist_api","routing","exact","path","component","match","params","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.564cba8e.chunk.js","sourcesContent":["class User {\n\tconstructor(id, username, firstName, lastName, isAuth, stocks) {\n\t\tthis.id = id;\n\t\tthis.username = username;\n\t\tthis.firstName = firstName;\n\t\tthis.lastName = lastName;\n\t\tthis.isAuth = isAuth;\n\t\tthis.stocks = stocks;\n\t}\n\n\tgetId() {\n\t\treturn this.id;\n\t}\n\n\tgetUsername() {\n\t\treturn this.username;\n\t}\n\n\tgetFirstName() {\n\t\treturn this.firstName;\n\t}\n\n\tgetLastName() {\n\t\treturn this.lastName;\n\t}\n\n\tgetIsAuth() {\n\t\treturn this.isAuth;\n\t}\n\n\tgetStocks() {\n\t\treturn this.stocks;\n\t}\n\n\taddStock(stock) {\n\t\tthis.stocks.push(stock);\n\t}\n\n\tsetFirstName(firstName) {\n\t\tthis.firstName = firstName;\n\t}\n\n\tsetLastName(lastName) {\n\t\tthis.lastName = lastName;\n\t}\n}\n\nexport default User;\n","/**\n * Authentication + session helper\n */\nimport User from '../model/User';\n\n/**\n * Check if user is authenticated\n */\nexport const isAuthenticated = () => {\n    if (localStorage.getItem(\"isAuth\") === \"true\") {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Adds user info into localStorage\n */\nexport const setSession = (user) => {\n    localStorage.setItem('isAuth', user.getIsAuth());\n    localStorage.setItem('id', user.getId());\n    localStorage.setItem('username', user.getUsername());\n    localStorage.setItem('firstname', user.getFirstName());\n    localStorage.setItem('lastname', user.getLastName());\n    localStorage.setItem('stocks', JSON.stringify(user.getStocks()));\n}\n\n/**\n * Destroys all contents of localStorage\n */\nexport const destroySession = () => {\n    localStorage.clear();\n}\n\n/**\n * Gets user info from localStorage\n */\nexport const getUserInfo = () => {\n    return new User(\n        localStorage.getItem('id'),\n        localStorage.getItem('username'),\n        localStorage.getItem('firstname'),\n        localStorage.getItem('lastname'),\n        localStorage.getItem('isAuth'),\n        JSON.parse(localStorage.getItem('stocks'))\n    );\n}","import React from 'react';\nimport {\n\tNavbar,\n\tNav,\n\tForm,\n\tButton,\n\tToggleButtonGroup,\n\tToggleButton\n} from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\"; // http://ericgio.github.io/react-bootstrap-typeahead/#top\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n\tisAuthenticated,\n\tgetUserInfo,\n\tdestroySession\n} from '../../utils/auth';\n\nclass Header extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// Search value will be stored in state\n\t\tthis.state = {\n\t\t\turl: '',\n\t\t\tfirstname: '',\n\t\t\tlastname: '',\n\t\t\tusername: '',\n\t\t\tsymbols: [],\n\t\t\tcompanies: [],\n\t\t\tdata: [], // This will be an array of symbols or companies, default is symbols\n\t\t\tdataType: '', // Type of data - symbol or company\n\t\t\tsearchText: \"Select a Symbol\", // Text for the searchInput \n\t\t\tsearchValue: '', // Value to be searched\n\t\t\tsearchDisabled: true\n\t\t};\n\n\t\t// Bind, so that 'this' can be used in the callback\n\t\tthis.searchStock = this.searchStock.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.logout = this.logout.bind(this);\n\t\tthis.toggleChange = this.toggleChange.bind(this);\n\t}\n\n\t/** \n\t * onChange listener for the Typeahead component\n\t * \n\t * Returns an array of elements selected\n\t * \n\t * https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/Props.md\n\t */\n\thandleChange(event) {\n\t\tif (event[0] !== undefined) {\n\t\t\t// Encode the value since it will be used in the URL\n\t\t\tthis.setState({\n\t\t\t\tsearchValue: encodeURIComponent(event[0])\n\t\t\t}, () => {\n\n\t\t\t\t// Check that a search value is provided\n\t\t\t\tif (this.state.searchValue !== undefined) this.setState({ searchDisabled: false });\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * onChange listener for Toggle\n\t * \n\t * Returns value of toggle \n\t * \n\t * https://react-bootstrap.netlify.com/components/buttons/\n\t */\n\ttoggleChange(event) {\n\t\tif (event === 1) {\n\t\t\t// Symbol\n\t\t\tthis.setState({\n\t\t\t\tsearchText: \"Select a Symbol\",\n\t\t\t\tdata: this.state.symbols,\n\t\t\t\tdataType: \"symbol\",\n\t\t\t\tsearchValue: \"\"\n\t\t\t})\n\t\t}\n\n\t\tif (event === 2) {\n\t\t\t// Company\n\t\t\tthis.setState({\n\t\t\t\tsearchText: \"Select a Company\",\n\t\t\t\tdata: this.state.companies,\n\t\t\t\tdataType: \"company\",\n\t\t\t\tsearchValue: \"\"\n\t\t\t})\n\t\t}\n\t}\n\n\t// Grabs the list of symbol / companies to search for\n\tasync prepareSearchbar() {\n\t\t// Check if localStorage has symbols in store\n\t\tif (!localStorage.getItem(\"symbols\")) {\n\n\t\t\t// Get the list of symbols from the server\n\t\t\tconst url = `${process.env.REACT_APP_get_symbols_url}`;\n\n\t\t\ttry {\n\t\t\t\tconst resp = await fetch(url);\n\n\t\t\t\tif (resp.status === 200) {\n\t\t\t\t\tconst json = await resp.json();\n\n\t\t\t\t\t// Set array of symbols into localStorage\n\t\t\t\t\tlocalStorage.setItem(\"symbols\", JSON.stringify(json));\n\n\t\t\t\t\t// Load the array into state\n\t\t\t\t\tthis.setState({ symbols: json })\n\t\t\t\t}\n\n\t\t\t\tif (resp.status === 500) throw new Error();\n\t\t\t} catch (err) {\n\t\t\t\tthis.props.history.push(\"/NotFound\");\n\t\t\t}\n\t\t}\n\n\t\t// Check if localStorage has companies in store\n\t\tif (!localStorage.getItem(\"companies\")) {\n\n\t\t\t// Get the list of companies from the server\n\t\t\tconst url = `${process.env.REACT_APP_get_companies_url}`;\n\n\t\t\ttry {\n\t\t\t\tconst resp = await fetch(url);\n\n\t\t\t\tif (resp.status === 200) {\n\t\t\t\t\tconst json = await resp.json();\n\n\t\t\t\t\t// Set array of companies into localStorage\n\t\t\t\t\tlocalStorage.setItem(\"companies\", JSON.stringify(json));\n\n\t\t\t\t\t// Load the array into state\n\t\t\t\t\tthis.setState({ companies: json })\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthis.props.history.push(\"/NotFound\");\n\t\t\t}\n\t\t}\n\n\t\t// Set data into state\n\t\tthis.setState({\n\t\t\tsymbols: JSON.parse(localStorage.getItem(\"symbols\")),\n\t\t\tcompanies: JSON.parse(localStorage.getItem(\"companies\"))\n\t\t}, () => {\n\n\t\t\t// Default will be search by symbol\n\t\t\tthis.setState({\n\t\t\t\tdata: this.state.symbols,\n\t\t\t\tdataType: \"symbol\"\n\t\t\t})\n\t\t})\n\t}\n\n\t// Get the symbol for the selected company\n\tasync getSymbolForCompany(company) {\n\t\tconst url = `${process.env.REACT_APP_get_symbol_by_company_url}${company}`;\n\n\t\ttry {\n\t\t\tconst resp = await fetch(url);\n\n\t\t\tif (resp.status === 200) {\n\t\t\t\tconst symbol = await resp.json();\n\t\t\t\treturn symbol;\n\t\t\t}\n\n\t\t\tif (resp.status === 500) throw new Error();\n\t\t} catch (err) {\n\t\t\tthis.props.history.push(\"/NotFound\");\n\t\t}\n\t}\n\n\t// Fires when form is submitted\n\tasync searchStock(e) {\n\t\te.preventDefault();\n\n\t\t// Check the data type of the value entered into the search bar\n\t\tif (this.state.dataType === \"company\") {\n\t\t\ttry {\n\t\t\t\tconst symbol = await this.getSymbolForCompany(this.state.searchValue);\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tsearchValue: symbol,\n\t\t\t\t\tsearchDisabled: true\n\t\t\t\t})\n\t\t\t} catch (err) {\n\t\t\t\tthis.props.history.push(\"/NotFound\");\n\t\t\t}\n\t\t}\n\n\t\t// Update `url` flag in state\n\t\tthis.setState({\n\t\t\turl: `/search/${this.state.searchValue}`,\n\t\t\tsearchValue: \"\",\n\t\t\tsearchDisabled: true\n\t\t}, () => this.props.history.push(this.state.url));\n\t}\n\n\t// On click, log the user out\n\tlogout() {\n\t\tdestroySession();\n\n\t\t// Redirect to home\n\t\tthis.props.history.push(\"/\");\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.prepareSearchbar();\n\t}\n\n\trender() {\n\t\tlet navbar = (\n\t\t\t<Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n\t\t\t\t<Navbar.Brand href=\"/\">StocksWatch</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/login\">Login</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/register\">Register</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<Form inline onSubmit={this.searchStock}>\n\t\t\t\t\t\t<ToggleButtonGroup id=\"toggleGroup\" type=\"radio\" name=\"search-option\" defaultValue={1} onChange={this.toggleChange}>\n\t\t\t\t\t\t\t<ToggleButton variant=\"outline-info\" value={1}>Symbol</ToggleButton>\n\t\t\t\t\t\t\t<ToggleButton variant=\"outline-info\" value={2}>Company</ToggleButton>\n\t\t\t\t\t\t</ToggleButtonGroup>\n\t\t\t\t\t\t<Typeahead id=\"searchInput\" className=\"mr-sm-2\" onChange={this.handleChange} options={this.state.data} flip={true} placeholder={this.state.searchText} value={this.state.searchValue} />\n\t\t\t\t\t\t<Button id=\"searchBtn\" variant=\"outline-info\" type=\"submit\" disabled={this.state.searchDisabled}>Search</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t);\n\n\t\t// Check if an user is logged in\n\t\tif (isAuthenticated()) {\n\t\t\tconst user = getUserInfo();\n\n\t\t\tnavbar = (\n\t\t\t\t<Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n\t\t\t\t\t<Navbar.Brand href=\"/\">StocksWatch</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t\t<Nav.Link disabled>\n\t\t\t\t\t\t\t\t<span id=\"name\">{user.getFirstName()} {user.getLastName()}</span>\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link href=\"/dow30\">Dow 30</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link href=\"/watchlist\">Watchlist</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link href=\"/settings\">Settings</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link onClick={this.logout} href=\"/\">Logout</Nav.Link>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t<Form inline onSubmit={this.searchStock}>\n\t\t\t\t\t\t\t<ToggleButtonGroup id=\"toggleGroup\" type=\"radio\" name=\"search-option\" defaultValue={1} onChange={this.toggleChange}>\n\t\t\t\t\t\t\t\t<ToggleButton variant=\"outline-info\" value={1}>Symbol</ToggleButton>\n\t\t\t\t\t\t\t\t<ToggleButton variant=\"outline-info\" value={2}>Company</ToggleButton>\n\t\t\t\t\t\t\t</ToggleButtonGroup>\n\t\t\t\t\t\t\t<Typeahead id=\"searchInput\" className=\"mr-sm-2\" onChange={this.handleChange} options={this.state.data} flip={true} placeholder={this.state.searchText} value={this.state.searchValue} />\n\t\t\t\t\t\t\t<Button id=\"searchBtn\" variant=\"outline-success\" type=\"submit\" disabled={this.state.searchDisabled}>Search</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Navbar>\n\t\t\t);\n\t\t}\n\n\t\treturn navbar;\n\t}\n}\n\nexport default withRouter(Header);\n","import React from 'react';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts/highstock';\n\nclass StockChart extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsymbol: null,\n\t\t\tprices: null,\n\t\t\tcurrentPrice: null,\n\t\t\tcompanyName: null,\n\n\t\t\t// Highcharts configs\n\t\t\tchartOptions: {\n\t\t\t\t// Title\n\t\t\t\ttitle: {},\n\n\t\t\t\t// Data\n\t\t\t\tseries: [],\n\n\t\t\t\t// Theme - below is taken from https://github.com/highcharts/highcharts/blob/master/js/themes/dark-unica.js\n\t\t\t\tcolors: ['#2b908f', '#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066',\n\t\t\t\t\t'#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\n\t\t\t\tchart: {\n\t\t\t\t\tbackgroundColor: {\n\t\t\t\t\t\tlinearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n\t\t\t\t\t\tstops: [\n\t\t\t\t\t\t\t[0, '#2a2a2b'],\n\t\t\t\t\t\t\t[1, '#3e3e40']\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontFamily: '\\'Unica One\\', sans-serif'\n\t\t\t\t\t},\n\t\t\t\t\tplotBorderColor: '#606063'\n\t\t\t\t},\n\t\t\t\tsubtitle: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolor: '#E0E0E3',\n\t\t\t\t\t\ttextTransform: 'uppercase'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\tgridLineColor: '#707073',\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: '#E0E0E3'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tlineColor: '#707073',\n\t\t\t\t\tminorGridLineColor: '#505053',\n\t\t\t\t\ttickColor: '#707073',\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: '#A0A0A3'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\tgridLineColor: '#707073',\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: '#E0E0E3'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tlineColor: '#707073',\n\t\t\t\t\tminorGridLineColor: '#505053',\n\t\t\t\t\ttickColor: '#707073',\n\t\t\t\t\ttickWidth: 1,\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: '#A0A0A3'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.85)',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolor: '#F0F0F0'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tplotOptions: {\n\t\t\t\t\tseries: {\n\t\t\t\t\t\tdataLabels: {\n\t\t\t\t\t\t\tcolor: '#F0F0F3',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tfontSize: '13px'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmarker: {\n\t\t\t\t\t\t\tlineColor: '#333'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tboxplot: {\n\t\t\t\t\t\tfillColor: '#505053'\n\t\t\t\t\t},\n\t\t\t\t\tcandlestick: {\n\t\t\t\t\t\tlineColor: 'white'\n\t\t\t\t\t},\n\t\t\t\t\terrorbar: {\n\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.5)',\n\t\t\t\t\titemStyle: {\n\t\t\t\t\t\tcolor: '#E0E0E3'\n\t\t\t\t\t},\n\t\t\t\t\titemHoverStyle: {\n\t\t\t\t\t\tcolor: '#FFF'\n\t\t\t\t\t},\n\t\t\t\t\titemHiddenStyle: {\n\t\t\t\t\t\tcolor: '#606063'\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: '#C0C0C0'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcredits: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolor: '#666'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlabels: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolor: '#707073'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdrilldown: {\n\t\t\t\t\tactiveAxisLabelStyle: {\n\t\t\t\t\t\tcolor: '#F0F0F3'\n\t\t\t\t\t},\n\t\t\t\t\tactiveDataLabelStyle: {\n\t\t\t\t\t\tcolor: '#F0F0F3'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tnavigation: {\n\t\t\t\t\tbuttonOptions: {\n\t\t\t\t\t\tsymbolStroke: '#DDDDDD',\n\t\t\t\t\t\ttheme: {\n\t\t\t\t\t\t\tfill: '#505053'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trangeSelector: {\n\t\t\t\t\tbuttonTheme: {\n\t\t\t\t\t\tfill: '#505053',\n\t\t\t\t\t\tstroke: '#000000',\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: '#CCC'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstates: {\n\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\tfill: '#707073',\n\t\t\t\t\t\t\t\tstroke: '#000000',\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\t\tfill: '#000003',\n\t\t\t\t\t\t\t\tstroke: '#000000',\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tinputBoxBorderColor: '#505053',\n\t\t\t\t\tinputStyle: {\n\t\t\t\t\t\tbackgroundColor: '#333',\n\t\t\t\t\t\tcolor: 'silver'\n\t\t\t\t\t},\n\t\t\t\t\tlabelStyle: {\n\t\t\t\t\t\tcolor: 'silver'\n\t\t\t\t\t},\n\t\t\t\t\tselected: 2\n\t\t\t\t},\n\t\t\t\tnavigator: {\n\t\t\t\t\thandles: {\n\t\t\t\t\t\tbackgroundColor: '#666',\n\t\t\t\t\t\tborderColor: '#AAA'\n\t\t\t\t\t},\n\t\t\t\t\toutlineColor: '#CCC',\n\t\t\t\t\tmaskFill: 'rgba(255,255,255,0.1)',\n\t\t\t\t\tseries: {\n\t\t\t\t\t\tcolor: '#7798BF',\n\t\t\t\t\t\tlineColor: '#A6C7ED'\n\t\t\t\t\t},\n\t\t\t\t\txAxis: {\n\t\t\t\t\t\tgridLineColor: '#505053'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tscrollbar: {\n\t\t\t\t\tbarBackgroundColor: '#808083',\n\t\t\t\t\tbarBorderColor: '#808083',\n\t\t\t\t\tbuttonArrowColor: '#CCC',\n\t\t\t\t\tbuttonBackgroundColor: '#606063',\n\t\t\t\t\tbuttonBorderColor: '#606063',\n\t\t\t\t\trifleColor: '#FFF',\n\t\t\t\t\ttrackBackgroundColor: '#404043',\n\t\t\t\t\ttrackBorderColor: '#404043'\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tprepareChart() {\n\t\tlet high = this.state.prices.high;\n\t\tlet low = this.state.prices.low;\n\n\t\t// Update the chartOptions in state\n\t\tthis.setState({\n\t\t\tchartOptions: {\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: this.state.companyName === undefined ? `${this.state.symbol} <br/><br/> $${this.state.currentPrice}` : `${this.state.companyName} (${this.state.symbol}) <br/><br/> $${this.state.currentPrice}`,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolor: '#E0E0E3',\n\t\t\t\t\t\ttextTransform: 'uppercase',\n\t\t\t\t\t\tfontSize: '20px'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tseries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: `${this.state.symbol} High Price`,\n\t\t\t\t\t\tdata: high.reverse()\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: `${this.state.symbol} Low Price`,\n\t\t\t\t\t\tdata: low.reverse()\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t}\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n\t\t// Populate the chart with the initial data\n\t\tconst data = this.props.data;\n\n\t\tthis.setState({\n\t\t\tsymbol: data.symbol,\n\t\t\tprices: data.prices,\n\t\t\tcurrentPrice: data.currentPrice,\n\t\t\tcompanyName: data.company\n\t\t}, () => this.prepareChart());\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// While componentDidUpdate() will fire whenever the data passed in this component has changed, we only care when the data is changed for single stock data\n\t\tif (this.props.type === \"single\") {\n\t\t\tlet prevSymbol = prevProps.data.symbol;\n\t\t\tlet currSymbol = this.props.data.symbol;\n\n\t\t\t// Check if the symbol in props are different\n\t\t\tif (prevSymbol !== currSymbol) {\n\t\t\t\tconst data = this.props.data;\n\n\t\t\t\t// Update the state and then reload the chart\n\t\t\t\tthis.setState({\n\t\t\t\t\tsymbol: data.symbol,\n\t\t\t\t\tprices: data.prices,\n\t\t\t\t\tcurrentPrice: data.currentPrice,\n\t\t\t\t\tcompanyName: data.company\n\t\t\t\t}, () => this.prepareChart());\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<HighchartsReact\n\t\t\t\toptions={this.state.chartOptions}\n\t\t\t\thighcharts={Highcharts}\n\t\t\t\tconstructorType={'stockChart'}\n\t\t\t/>\n\t\t)\n\t}\n}\n\nexport default StockChart;","import React from 'react';\nimport {\n    Spinner\n} from 'react-bootstrap';\n\nclass LoadingSpinner extends React.Component {\n    render() {\n        return (\n            <div className=\"spinner\">\n                <Spinner className=\"spin\" animation=\"border\" variant=\"info\" size=\"lg\">\n                </Spinner>\n            </div>\n        )\n    }\n}\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport {\n    Alert\n} from 'react-bootstrap';\n\nclass Unavailable extends React.Component {\n    render() {\n        return (\n            <Alert variant=\"danger\">\n                <Alert.Heading>Service Unavailable</Alert.Heading>\n                <p>{this.props.message}</p>\n            </Alert>\n        )\n    }\n}\n\nexport default Unavailable;\n","import React from 'react';\nimport {\n    Alert\n} from 'react-bootstrap';\n\nclass Info extends React.Component {\n    render() {\n        return (\n            <Alert variant=\"info\">\n                <Alert.Heading>{this.props.header}</Alert.Heading>\n                {this.props.message}\n            </Alert>\n        )\n    }\n}\n\nexport default Info;\n","/**\n * All Client to Server requests will be listed here\n */\n\n/**\n * Sends a POST request to the server based on the url provided\n * \n * @param {*} url \n * @param {*} data \n */\nexport const post = async (url, data) => {\n    try {\n        const resp = await fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: data\n        });\n\n        return resp;\n    } catch (err) {\n        throw new Error(\"POST request failed!\")\n    }\n}\n\n/**\n * Sends a DELETE request to the server based on the url provided\n * \n * @param {*} url \n * @param {*} data \n */\nexport const del = async (url, data) => {\n    try {\n        const resp = await fetch(url, {\n            method: \"DELETE\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: data\n        });\n\n        return resp;\n    } catch (err) {\n        throw new Error(\"DELETE request failed!\")\n    }\n}\n\n/**\n * Sends a PUT request to the server based on the url provided\n * \n * @param {*} url \n * @param {*} data \n */\nexport const put = async (url, data) => {\n    try {\n        const resp = await fetch(url, {\n            method: \"PUT\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: data\n        });\n\n        return resp;\n    } catch (err) {\n        throw new Error(\"PUT request failed!\")\n    }\n}","import React from 'react';\nimport {\n\tButtonToolbar,\n\tButton\n} from 'react-bootstrap';\n\nimport StockChart from './StockChart';\nimport LoadingSpinner from './LoadingSpinner';\nimport Unavailable from '../alert/Unavailable';\nimport Info from '../alert/Info';\n\nimport {\n\tisAuthenticated\n} from '../../utils/auth';\nimport {\n\tpost\n} from \"../../utils/requests\";\n\nclass Wrapper extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdata: \"\",\n\t\t\terror: false,\n\t\t\tbtnDisable: false,\n\t\t\tbtnText: \"Add to Watchlist\"\n\t\t};\n\n\t\tthis.addUserStock = this.addUserStock.bind(this);\n\t\tthis.checkStockInWatchlist = this.checkStockInWatchlist.bind(this);\n\t}\n\n\t// Grabs the data for the stock\n\tasync fetchData() {\n\t\t// Get props\n\t\tconst api = this.props.api + this.props.symbol;\n\n\t\t// GET data from server\n\t\ttry {\n\t\t\tconst resp = await fetch(api);\n\n\t\t\t// On 200 status\n\t\t\tif (resp.status === 200) {\n\t\t\t\tconst json = await resp.json();\n\n\t\t\t\t// Set the data returned from fetch in state\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: json,\n\t\t\t\t\terror: false\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// On 500 status\n\t\t\tif (resp.status === 500) throw new Error();\n\t\t} catch (err) {\n\t\t\tthis.setState({ error: true })\n\t\t}\n\t}\n\n\t// Adds the stock to the user watchlist\n\tasync addUserStock(e) {\n\t\te.preventDefault();\n\n\t\t// Get values\n\t\tconst stock = this.props.symbol;\n\t\tconst userId = localStorage.getItem(\"id\");\n\t\tconst username = localStorage.getItem(\"username\");\n\n\t\t// Prepare url and data\n\t\tconst url = `${process.env.REACT_APP_post_user_watchlist_url}`;\n\t\tconst data = JSON.stringify({\n\t\t\t\"userId\": userId,\n\t\t\t\"stock\": stock,\n\t\t\t\"username\": username\n\t\t})\n\n\t\ttry {\n\t\t\tconst resp = await post(url, data);\n\n\t\t\t// On 200 status\n\t\t\tif (resp.status === 200) {\n\t\t\t\tconst json = await resp.json();\n\n\t\t\t\t// Add stock to localStorage / session\n\t\t\t\tlet symbol = json.symbol;\n\t\t\t\tlet stocks = JSON.parse(localStorage.getItem(\"stocks\"));\n\t\t\t\tstocks.push(symbol);\n\t\t\t\tstocks = JSON.stringify(stocks);\n\t\t\t\tlocalStorage.setItem(\"stocks\", stocks);\n\n\t\t\t\t// Update state\n\t\t\t\tthis.setState({\n\t\t\t\t\tbtnDisable: true,\n\t\t\t\t\tbtnText: \"Added!\"\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// On 500 status\n\t\t\tif (resp.status === 500) throw new Error();\n\t\t} catch (err) {\n\t\t\tthis.setState({ error: true });\n\t\t}\n\t}\n\n\t// Check if the stock exists in localStorage 'stocks'\n\tcheckStockInWatchlist(e) {\n\t\tif (this.props.symbol !== \"\") {\n\t\t\tif (localStorage.getItem(\"stocks\")) {\n\t\t\t\tconst stocks = JSON.parse(localStorage.getItem(\"stocks\"));\n\n\t\t\t\tif (stocks.includes(this.props.symbol)) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tbtnDisable: true,\n\t\t\t\t\t\tbtnText: \"Added!\"\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchData();\n\t\tthis.checkStockInWatchlist();\n\t}\n\n\t/**\n\t * Since this component is used repeatedly as a \"wrapper\" for loading single graphs, on a new /search/:symbol reload the data \n\t */\n\tcomponentDidUpdate(prevProps) {\n\t\t// Check if symbol has changed\n\t\tif (prevProps.symbol !== this.props.symbol) {\n\n\t\t\t// Reset button states\n\t\t\tthis.setState({\n\t\t\t\tbtnDisable: false,\n\t\t\t\tbtnText: \"Add to Watchlist\"\n\t\t\t});\n\n\t\t\tthis.fetchData();\n\t\t\tthis.checkStockInWatchlist();\n\t\t}\n\t}\n\n\trender() {\n\t\t// Check for error from server\n\t\tif (this.state.error) {\n\t\t\treturn <Unavailable message={\"There is an error getting the data for that stock!\"} />;\n\t\t}\n\n\t\t// Check if data in state is still an empty string\n\t\tif (this.state.data !== \"\") {\n\t\t\tlet json = this.state.data;\n\n\t\t\t// Check if json has DOW30\n\t\t\tif (json.hasOwnProperty(\"DOW30\")) {\n\t\t\t\tlet stockCharts = [];\n\t\t\t\tlet dow = json[\"DOW30\"];\n\n\t\t\t\t// Check if the user is authenticated to determine dow30 message\n\t\t\t\tlet message = \"Login or Register to build your personalized watchlist\";\n\n\t\t\t\tif (isAuthenticated()) message = \"Companies in the Dow Jones Industrial Average\";\n\n\t\t\t\tstockCharts.push(\n\t\t\t\t\t<Info header={\"Dow 30\"} message={message} />\n\t\t\t\t);\n\n\t\t\t\t// Render each DOW stock as its own StockChart component\n\t\t\t\tdow.forEach(d => stockCharts.push(<StockChart data={d} type=\"multiple\" />));\n\n\t\t\t\treturn stockCharts;\n\t\t\t}\n\n\t\t\t// If the json does not have DOW30, then its a single stock\n\t\t\t// Check if the user is logged in\n\t\t\tif (isAuthenticated()) {\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<StockChart data={json} type=\"single\" />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<ButtonToolbar className=\"center\">\n\t\t\t\t\t\t\t<Button variant=\"success\" onClick={this.addUserStock} disabled={this.state.btnDisable}>{this.state.btnText}</Button>\n\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Default is to render the chart for the single stock\n\t\t\treturn <StockChart data={json} type=\"single\" />;\n\t\t}\n\n\t\t// Temporary DOM element until the date is ready\n\t\treturn <LoadingSpinner />;\n\t}\n}\n\nexport default Wrapper;\n","import React from 'react';\nimport StockChart from './StockChart';\nimport LoadingSpinner from './LoadingSpinner';\nimport Unavailable from '../alert/Unavailable';\nimport Info from \"../alert/Info\";\n\nimport {\n\tpost\n} from \"../../utils/requests\";\n\nclass WatchlistCharts extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\twatchlist: [],\n\t\t\tdata: \"\",\n\t\t\terror: false\n\t\t};\n\t}\n\n\t/**\n\t * Sends a request to the server to retrieve all the user's stocks' data\n\t */\n\tasync fetchData() {\n\t\tif (this.state.watchlist.length > 0) {\n\t\t\t// Prepare data and url\n\t\t\tconst api = this.props.api;\n\t\t\tconst data = JSON.stringify(\n\t\t\t\t{ \"watchlist\": JSON.parse(localStorage.getItem(\"stocks\")) }\n\t\t\t);\n\n\t\t\ttry {\n\t\t\t\tconst resp = await post(api, data);\n\n\t\t\t\t// Check HTTP status code\n\t\t\t\tif (resp.status === 200) {\n\t\t\t\t\tconst json = await resp.json();\n\t\t\t\t\tthis.setState({ data: json });\n\t\t\t\t}\n\n\t\t\t\tif (resp.status === 500) throw new Error();\n\t\t\t} catch (err) {\n\t\t\t\tthis.setState({ error: true })\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// Get the stocks of the user in localStorage \n\t\tconst stocks = JSON.parse(localStorage.getItem('stocks'));\n\n\t\tthis.setState({\n\t\t\twatchlist: stocks\n\t\t}, () => this.fetchData());\n\t}\n\n\trender() {\n\t\t// Determine the message to show in the alert\n\t\tconst message = (this.state.watchlist.length === 0 ?\n\t\t\t<p>Your watchlist is currently empty! Go <a href='/watchlist'>here</a> to add to your watchlist</p> :\n\t\t\t<p>Go <a href='/watchlist'>here</a> to update your watchlist</p>\n\t\t);\n\n\t\t// Alert\n\t\tconst alert = (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.state.error ?\n\t\t\t\t\t<Unavailable message={\"Could not load your watchlist at this time!\"} /> :\n\t\t\t\t\t<Info header={\"Your Watchlist\"} message={message} />\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t)\n\n\t\t// Check if the user has stocks listed in their watchlist and that data has been retreived\n\t\tif (this.state.watchlist.length > 0 &&\n\t\t\tthis.state.data !== \"\") {\n\n\t\t\t// Get the data retrieved from the server\n\t\t\tlet json = this.state.data;\n\n\t\t\tif (json.hasOwnProperty(\"watchlist\")) {\n\t\t\t\tlet charts = [];\n\t\t\t\tcharts.push(alert);\n\n\t\t\t\t// For each stock in the user's watchlist, generate a chart for it\n\t\t\t\tlet watchlist = json[\"watchlist\"];\n\n\t\t\t\twatchlist.forEach(d => {\n\t\t\t\t\tcharts.push(<StockChart data={d} type=\"multiple\" />);\n\t\t\t\t});\n\n\t\t\t\treturn charts;\n\t\t\t}\n\t\t}\n\n\t\t// Show alert message to let users know about adding to watchlist\n\t\tif (this.state.watchlist.length === 0) {\n\t\t\treturn alert;\n\t\t}\n\n\t\t// Default to render a spinner\n\t\treturn <LoadingSpinner />;\n\t}\n}\n\nexport default WatchlistCharts;","import React from 'react';\nimport {\n    Alert\n} from 'react-bootstrap';\n\nclass Notfound extends React.Component {\n    render() {\n        return (\n            <Alert variant=\"danger\">\n                <Alert.Heading>Oops! Something Unexpected Has Occured!</Alert.Heading>\n                <p>Something bad has happened. Please try again later!</p>\n            </Alert>\n        )\n    }\n}\n\nexport default Notfound;\n","import React from 'react';\nimport {\n    Alert\n} from 'react-bootstrap';\n\nclass Error extends React.Component {\n    render() {\n        return (\n            <Alert variant=\"danger\">\n                <Alert.Heading>An Error Has Occurred</Alert.Heading>\n                <p>{this.props.message}</p>\n            </Alert>\n        )\n    }\n}\n\nexport default Error;\n","import React from 'react';\nimport {\n\tForm,\n\tButton\n} from 'react-bootstrap';\nimport {\n\twithRouter\n} from 'react-router-dom';\n\nimport Error from '../alert/Error';\nimport User from '../../model/User';\n\nimport {\n\tsetSession\n} from '../../utils/auth';\nimport {\n\tpost\n} from \"../../utils/requests\"\n\nclass Login extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\terror: false\n\t\t};\n\n\t\t// Bind methods\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.login = this.login.bind(this);\n\t\tthis.toRegister = this.toRegister.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tlet name = e.target.name;\n\t\tlet value = e.target.value;\n\n\t\tthis.setState({ [name]: value });\n\t}\n\n\t// Takes the input values from the form to authenticate user\n\tasync login(e) {\n\t\te.preventDefault();\n\n\t\t// Validate the inputs\n\t\tlet username = this.state.username;\n\t\tlet password = this.state.password;\n\n\t\tusername = username.trim().toLowerCase();\n\t\tpassword = password.trim();\n\n\t\t// Prepare data and url\n\t\tconst data = JSON.stringify({\n\t\t\t\"username\": username,\n\t\t\t\"password\": password\n\t\t});\n\n\t\tlet url = `${process.env.REACT_APP_post_login_url}`;\n\n\t\t// Fire POST request\n\t\ttry {\n\t\t\tconst resp = await post(url, data);\n\n\t\t\t// Check for 200\n\t\t\tif (resp.status === 200) {\n\t\t\t\tconst json = await resp.json();\n\n\t\t\t\t// Instantiate User\n\t\t\t\tconst user = new User(\n\t\t\t\t\tjson.user_id,\n\t\t\t\t\tjson.username,\n\t\t\t\t\tjson.firstname,\n\t\t\t\t\tjson.lastname,\n\t\t\t\t\ttrue,\n\t\t\t\t\tjson.stocks\n\t\t\t\t);\n\n\t\t\t\t// Set user session\n\t\t\t\tsetSession(user);\n\n\t\t\t\t// Redirect to home\n\t\t\t\tthis.props.history.push(\"/\");\n\t\t\t}\n\n\t\t\t// On 500 status\n\t\t\tif (resp.status === 500) throw new Error();\n\t\t} catch (err) {\n\t\t\tthis.setState({ error: true });\n\t\t}\n\t}\n\n\t// Redirects user to /register\n\ttoRegister() {\n\t\tthis.props.history.push(\"/register\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.state.error ? <Error message={\"The username or password entered does not match our records. Please try agian!\"} /> : \"\"}\n\n\t\t\t\t<div id=\"login\">\n\t\t\t\t\t<Form onSubmit={this.login}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"username\" placeholder=\"Enter username\" onChange={this.handleChange} />\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.handleChange} />\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Button variant=\"info\" type=\"submit\">\n\t\t\t\t\t\t\tLogin\n                   \t\t</Button>\n\n\t\t\t\t\t\t<span className=\"space\"></span>\n\n\t\t\t\t\t\t<Button variant=\"outline-info\" onClick={this.toRegister}>\n\t\t\t\t\t\t\tRegister\n\t                    </Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport {\n\tForm,\n\tButton\n} from 'react-bootstrap';\nimport {\n\twithRouter\n} from 'react-router-dom';\n\nimport Error from '../alert/Error';\nimport User from '../../model/User';\n\nimport {\n\tsetSession\n} from '../../utils/auth';\nimport {\n\tpost\n} from \"../../utils/requests\"\n\nclass Register extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\tfirstname: '',\n\t\t\tlastname: '',\n\t\t\terror: false\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.register = this.register.bind(this);\n\t\tthis.toLogin = this.toLogin.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tlet name = e.target.name;\n\t\tlet value = e.target.value;\n\n\t\tthis.setState({ [name]: value });\n\t}\n\n\t// Takes the input in the form to register the user\n\tasync register(e) {\n\t\te.preventDefault();\n\n\t\t// Validate inputs\n\t\tlet username = this.state.username.trim().toLowerCase();\n\t\tlet password = this.state.password.trim();\n\t\tlet firstname = this.state.firstname.trim().toLowerCase();\n\t\tlet lastname = this.state.lastname.trim().toLowerCase();\n\n\t\tfirstname = firstname.charAt(0).toUpperCase() + firstname.slice(1);\n\t\tlastname = lastname.charAt(0).toUpperCase() + lastname.slice(1);\n\n\t\t// Prepare data and url\n\t\tconst data = JSON.stringify({\n\t\t\t\"username\": username,\n\t\t\t\"password\": password,\n\t\t\t\"firstname\": firstname,\n\t\t\t\"lastname\": lastname\n\t\t});\n\t\tconst url = `${process.env.REACT_APP_post_register_url}`;\n\n\t\t// Fire POST request\n\t\ttry {\n\t\t\tconst resp = await post(url, data);\n\n\t\t\t// On 200 status\n\t\t\tif (resp.status === 200) {\n\t\t\t\tconst json = await resp.json();\n\t\t\t\tlet id = json.id;\n\n\t\t\t\t// Instantiate User\n\t\t\t\tconst user = new User(\n\t\t\t\t\tid,\n\t\t\t\t\tusername,\n\t\t\t\t\tfirstname,\n\t\t\t\t\tlastname,\n\t\t\t\t\ttrue,\n\t\t\t\t\t[]\n\t\t\t\t);\n\n\t\t\t\t// Set user session\n\t\t\t\tsetSession(user);\n\n\t\t\t\t// Redirect to home\n\t\t\t\tthis.props.history.push(\"/\");\n\t\t\t}\n\n\t\t\t// On 500 status\n\t\t\tif (resp.status === 500) throw new Error();\n\t\t} catch (err) {\n\t\t\tthis.setState({ error: true });\n\t\t}\n\t}\n\n\t// Redirects user to /login\n\ttoLogin() {\n\t\tthis.props.history.push(\"/login\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.state.error ? <Error message={\"There has been an error registering your information. Please try again!\"} /> : \"\"}\n\n\t\t\t\t<div id=\"login\">\n\t\t\t\t\t<Form onSubmit={this.register}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Enter username\" name=\"username\" onChange={this.handleChange} />\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>First Name</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Enter first name\" name=\"firstname\" onChange={this.handleChange} />\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Last Name</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Enter last name\" name=\"lastname\" onChange={this.handleChange} />\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.handleChange} />\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Button variant=\"info\" type=\"submit\">\n\t\t\t\t\t\t\tRegister\n                    \t</Button>\n\n\t\t\t\t\t\t<span className=\"space\"></span>\n\n\t\t\t\t\t\t<Button variant=\"outline-info\" onClick={this.toLogin}>\n\t\t\t\t\t\t\tLogin\n                    \t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default withRouter(Register);","import React from 'react';\nimport {\n\tForm,\n\tButton\n} from 'react-bootstrap';\nimport {\n\twithRouter\n} from 'react-router-dom';\n\nimport Error from '../alert/Error';\nimport User from '../../model/User';\n\nimport {\n\tsetSession\n} from '../../utils/auth';\nimport {\n\tput\n} from '../../utils/requests';\n\nclass Setting extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\togUsername: localStorage.getItem(\"username\"),\n\t\t\tusername: localStorage.getItem(\"username\"),\n\t\t\tfirstname: localStorage.getItem(\"firstname\"),\n\t\t\tlastname: localStorage.getItem(\"lastname\"),\n\t\t\tpassword: \"\",\n\t\t\terror: false,\n\t\t\terrMessage: \"There has been an error updating your settings!\"\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.update = this.update.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tlet name = e.target.name;\n\t\tlet value = e.target.value;\n\n\t\tthis.setState({ [name]: value })\n\t}\n\n\tasync update(e) {\n\t\te.preventDefault();\n\n\t\tlet error = false;\n\n\t\t// Validate inputs\n\t\tlet username = this.state.username;\n\t\tlet password = this.state.password;\n\t\tlet firstname = this.state.firstname;\n\t\tlet lastname = this.state.lastname;\n\n\t\tusername = username.trim().toLowerCase();\n\t\tpassword = password.trim();\n\t\tfirstname = firstname.trim().toLowerCase();\n\t\tlastname = lastname.trim().toLowerCase();\n\n\t\tfirstname = firstname.charAt(0).toUpperCase() + firstname.slice(1);\n\t\tlastname = lastname.charAt(0).toUpperCase() + lastname.slice(1);\n\n\t\tif (username.length === 0 ||\n\t\t\tpassword.length === 0 ||\n\t\t\tfirstname.length === 0 ||\n\t\t\tlastname.length === 0) {\n\n\t\t\terror = true;\n\t\t\tthis.setState({ errMessage: \"Please make sure none of the fields are empty!\" });\n\t\t}\n\n\t\tif (!error) {\n\t\t\t// Prepare url and data\n\t\t\tconst url = `${process.env.REACT_APP_put_settings_url}`;\n\t\t\tconst data = JSON.stringify({\n\t\t\t\t\"userId\": localStorage.getItem(\"id\"),\n\t\t\t\t\"ogUsername\": this.state.ogUsername,\n\t\t\t\t\"username\": username,\n\t\t\t\t\"password\": password,\n\t\t\t\t\"firstname\": firstname,\n\t\t\t\t\"lastname\": lastname\n\t\t\t});\n\n\t\t\t// Send UPDATE to server\n\t\t\ttry {\n\t\t\t\tconst resp = await put(url, data);\n\n\t\t\t\t// On 200 status\n\t\t\t\tif (resp.status === 200) {\n\t\t\t\t\tconst json = await resp.json();\n\n\t\t\t\t\t// Update user in localStorage\n\t\t\t\t\tconst user = new User(\n\t\t\t\t\t\tlocalStorage.getItem(\"id\"),\n\t\t\t\t\t\tjson.username,\n\t\t\t\t\t\tjson.firstname,\n\t\t\t\t\t\tjson.lastname,\n\t\t\t\t\t\tlocalStorage.getItem(\"isAuth\"),\n\t\t\t\t\t\tJSON.parse(localStorage.getItem(\"stocks\"))\n\t\t\t\t\t);\n\n\t\t\t\t\tsetSession(user);\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\togUsername: user.getUsername(),\n\t\t\t\t\t\tusername: user.getUsername(),\n\t\t\t\t\t\tfirstname: user.getFirstName(),\n\t\t\t\t\t\tlastname: user.getLastName()\n\t\t\t\t\t}, () => {\n\t\t\t\t\t\tthis.props.history.push(\"/\");\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// On 500 status\n\t\t\t\tif (resp.status === 500) throw new Error();\n\t\t\t} catch (err) {\n\t\t\t\tthis.setState({ error: true });\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.setState({ error: true })\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.state.error ? <Error message={this.state.errMessage} /> : \"\"}\n\n\t\t\t\t<div id=\"settings\">\n\t\t\t\t\t<Form onSubmit={this.update}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" value={this.state.username} name=\"username\" onChange={this.handleChange} />\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>First Name</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" value={this.state.firstname} name=\"firstname\" onChange={this.handleChange} />\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Last Name</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" value={this.state.lastname} name=\"lastname\" onChange={this.handleChange} />\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t\t\t<Button variant=\"info\" type=\"submit\">Update</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default withRouter(Setting);\n","import React from 'react';\nimport {\n    Form,\n    Button,\n    Card,\n    ListGroup,\n    ToggleButton,\n    ToggleButtonGroup\n} from 'react-bootstrap';\nimport { Typeahead } from \"react-bootstrap-typeahead\"; // http://ericgio.github.io/react-bootstrap-typeahead/#top\n\nimport Error from '../alert/Error';\n\nimport {\n    post,\n    del\n} from \"../../utils/requests\";\nimport Info from '../alert/Info';\n\nclass Watchlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchText: \"Select a Symbol\", // Text for the searchInput, \n            searchValue: '', // Value to be searched\n            prevStocks: [],\n            symbols: [],\n            companies: [],\n            data: [],\n            dataType: '', // Type of data - symbol or company\n            error: false,\n            searchDisabled: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.addUserStock = this.addUserStock.bind(this);\n        this.deleteUserStock = this.deleteUserStock.bind(this);\n        this.toggleChange = this.toggleChange.bind(this);\n    }\n\n    /** \n     * onChange listener for the Typeahead component\n     * \n     * Returns an array of elements selected\n     * \n     * https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/Props.md\n     */\n    handleChange(event) {\n        if (event[0] !== undefined) {\n            // Encode the value since it will be used in the URL\n            this.setState({\n                searchValue: encodeURIComponent(event[0])\n            })\n        }\n    }\n\n    /**\n     * onChange listener for Toggle\n     * \n     * Returns value of toggle \n     * \n     * https://react-bootstrap.netlify.com/components/buttons/\n     */\n    toggleChange(event) {\n        if (event === 1) {\n            // Symbol\n            this.setState({\n                searchText: \"Select a Symbol\",\n                data: this.state.symbols,\n                dataType: \"symbol\",\n                searchValue: \"\"\n            })\n        }\n\n        if (event === 2) {\n            // Company\n            this.setState({\n                searchText: \"Select a Company\",\n                data: this.state.companies,\n                dataType: \"company\",\n                searchValue: \"\"\n            })\n        }\n    }\n\n    // Grabs the list of symbol / companies to search for\n    async prepareSearchbar() {\n        // Check if localStorage has symbols in store\n        if (!localStorage.getItem(\"symbols\")) {\n\n            // Get the list of symbols from the server\n            const url = `${process.env.REACT_APP_get_symbols_url}`;\n\n            try {\n                const resp = await fetch(url);\n\n                if (resp.status === 200) {\n                    const json = await resp.json();\n\n                    // Set array of symbols into localStorage\n                    localStorage.setItem(\"symbols\", JSON.stringify(json));\n\n                    // Load the array into state\n                    this.setState({ symbols: json })\n                }\n\n                if (resp.status === 500) throw new Error();\n            } catch (err) {\n                this.setState({ error: true })\n            }\n        }\n\n        // Check if localStorage has companies in store\n        if (!localStorage.getItem(\"companies\")) {\n\n            // Get the list of companies from the server\n            const url = `${process.env.REACT_APP_get_companies_url}`;\n\n            try {\n                const resp = await fetch(url);\n\n                if (resp.status === 200) {\n                    const json = await resp.json();\n\n                    // Set array of companies into localStorage\n                    localStorage.setItem(\"companies\", JSON.stringify(json));\n\n                    // Load the array into state\n                    this.setState({ companies: json })\n                }\n\n                if (resp.status === 500) throw new Error();\n            } catch (err) {\n                this.setState({ error: true })\n            }\n        }\n\n        // Set data into state\n        this.setState({\n            symbols: JSON.parse(localStorage.getItem(\"symbols\")),\n            companies: JSON.parse(localStorage.getItem(\"companies\"))\n        }, () => {\n\n            // Default will be search by symbol\n            this.setState({\n                data: this.state.symbols,\n                dataType: \"symbol\"\n            })\n        })\n    }\n\n    // Get the symbol for the selected company\n    async getSymbolForCompany(company) {\n        const url = `${process.env.REACT_APP_get_symbol_by_company_url}${company}`;\n\n        try {\n            const resp = await fetch(url);\n\n            if (resp.status === 200) {\n                const symbol = await resp.json();\n                return symbol;\n            }\n\n            if (resp.status === 500) throw new Error();\n        } catch (err) {\n            this.setState({ error: true });\n        }\n    }\n\n    // Takes the inputted stock and POSTs it to the server\n    async addUserStock(e) {\n        e.preventDefault();\n\n        // Validate search value\n        if (this.state.searchValue === \"\") {\n            return;\n        }\n\n        // Check the data type of the value entered into the search bar\n        if (this.state.dataType === \"company\") {\n            try {\n                const symbol = await this.getSymbolForCompany(this.state.searchValue);\n                this.setState({ searchValue: symbol });\n            } catch (err) {\n                this.setState({ error: true });\n            }\n        }\n\n        // Get values\n        let stock = this.state.searchValue;\n        let userId = localStorage.getItem(\"id\");\n        let username = localStorage.getItem(\"username\");\n\n        // Prepare data and URL\n        const data = JSON.stringify({\n            \"userId\": userId,\n            \"stock\": stock,\n            \"username\": username\n        });\n\n        const url = `${process.env.REACT_APP_post_add_user_stock_url}`;\n\n        try {\n            const resp = await post(url, data);\n\n            // On 200 status\n            if (resp.status === 200) {\n                const json = await resp.json();\n\n                // Add stock to localStorage / session\n                let symbol = json.symbol;\n                let stocks = JSON.parse(localStorage.getItem(\"stocks\"));\n                stocks.push(symbol);\n                stocks = JSON.stringify(stocks);\n                localStorage.setItem(\"stocks\", stocks);\n\n                // Check if the number of stocks has passed 3 - the api does not allow anymore\n                stocks = JSON.parse(localStorage.getItem(\"stocks\"));\n                if (stocks.length >= 3) this.setState({ searchDisabled: true });\n                else this.setState({ searchDisabled: false });\n\n                // Update state\n                this.setState({\n                    searchValue: \"\",\n                    error: false,\n                    prevStocks: JSON.parse(localStorage.getItem('stocks')),\n                })\n            }\n\n            // On 500 status\n            if (resp.status === 500) throw new Error();\n        } catch (err) {\n            this.setState({ error: true });\n        }\n    }\n\n    async deleteUserStock(e) {\n        e.preventDefault();\n\n        // Validate\n        let stock = e.target.dataset.stock;\n        let userId = localStorage.getItem(\"id\");\n\n        // Prepare data \n        const data = JSON.stringify({\n            \"userId\": userId,\n            \"stock\": stock\n        });\n\n        const url = `${process.env.REACT_APP_delete_user_stock_url}`;\n\n        // Fires DELETE\n        try {\n            const resp = await del(url, data);\n\n            // On 200 status\n            if (resp.status === 200) {\n                const json = await resp.json();\n\n                // Remove stock from localStorage / session\n                let symbol = json.symbol;\n                let stocks = JSON.parse(localStorage.getItem(\"stocks\"));\n\n                for (let i = 0; i < stocks.length; i++) {\n                    if (stocks[i] === symbol) {\n                        stocks.splice(i, 1);\n                    }\n                }\n\n                stocks = JSON.stringify(stocks);\n                localStorage.setItem(\"stocks\", stocks);\n\n                // Check if the number of stocks has passed 3 - the api does not allow anymore\n                stocks = JSON.parse(localStorage.getItem(\"stocks\"));\n                if (stocks.length >= 3) this.setState({ searchDisabled: true });\n                else this.setState({ searchDisabled: false });\n\n                // Update state\n                this.setState({\n                    error: false,\n                    prevStocks: JSON.parse(localStorage.getItem('stocks')),\n                })\n            }\n\n            if (resp.status === 500) throw new Error();\n        } catch (err) {\n            this.setState({ error: true });\n        }\n    }\n\n    componentDidMount() {\n        this.prepareSearchbar();\n\n        // Get the stocks of the user in localStorage \n        const stocks = JSON.parse(localStorage.getItem('stocks'));\n        if (stocks.length > 0) this.setState({ prevStocks: stocks });\n\n        // Check if the number of stocks has passed 3 - the api does not allow anymore\n        if (stocks.length >= 3) this.setState({ searchDisabled: true });\n    }\n\n    render() {\n        // Error\n        const error = (\n            <React.Fragment>\n                {this.state.error ? <Error message={\"There has been an error. Please try again later!\"} /> : \"\"}\n            </React.Fragment>\n        )\n\n        // Watchlist\n        let watchlist = (\n            <React.Fragment>\n                {error}\n\n                <Info header={\"Notice\"} message={\"Due to limitations in the API used for this application, only up to 3 stocks are allowed to be added.\"} />;\n\n                <Form.Label>Add to Watchlist</Form.Label>\n                <Form inline onSubmit={this.addUserStock}>\n\n                    <Form.Group>\n                        <Typeahead id=\"watchlistInput\" onChange={this.handleChange} options={this.state.data} flip={true} placeholder={this.state.searchText} value={this.state.searchValue} />\n                        <ToggleButtonGroup id=\"toggleGroupWatchlist\" type=\"radio\" name=\"search-option\" defaultValue={1} onChange={this.toggleChange}>\n                            <ToggleButton variant=\"outline-info\" value={1}>Symbol</ToggleButton>\n                            <ToggleButton variant=\"outline-info\" value={2}>Company</ToggleButton>\n                        </ToggleButtonGroup>\n                    </Form.Group>\n\n                    <Button variant=\"outline-success\" type=\"submit\" disabled={this.state.searchDisabled}>\n                        Add\n                    </Button>\n                </Form>\n            </React.Fragment>\n        );\n\n        // If there are stocks in the user's watchlist already, show them here\n        if (this.state.prevStocks instanceof Array &&\n            this.state.prevStocks.length > 0) {\n\n            // Build the component(s) to be rendered\n            let temp = watchlist;\n            watchlist = [];\n            watchlist.push(temp);\n\n            // Each stock in prevStocks will exist in a list\n            let lists = [];\n            this.state.prevStocks.forEach(s => {\n                lists.push(\n                    <React.Fragment>\n                        <ListGroup.Item variant=\"info\">\n                            <span><a href={`/search/${s}`}>{s}</a></span>\n                            <span className=\"float-right\">\n                                <Button data-stock={s} variant=\"outline-danger\" size=\"sm\" onClick={this.deleteUserStock}>\n                                    Remove\n                                </Button>\n                            </span>\n                        </ListGroup.Item>\n                    </React.Fragment>\n                );\n            });\n\n            // Add the lists to a Card component\n            let card = (\n                <React.Fragment>\n                    <br />\n                    <Form.Label>Currently Watched Stocks</Form.Label>\n                    <Card bg=\"info\">\n                        <ListGroup variant=\"flush\">\n                            {lists}\n                        </ListGroup>\n                    </Card>\n                </React.Fragment>\n            );\n\n            watchlist.push(card);\n        }\n\n        return (\n            <div id=\"watchlist\">\n                {watchlist}\n            </div>\n        );\n    }\n}\n\nexport default Watchlist;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n// Components\nimport Header from './components/header/Header';\nimport Wrapper from './components/highcharts/Wrapper';\nimport WatchlistCharts from './components/highcharts/WatchlistCharts';\nimport Notfound from './components/alert/Notfound';\nimport Login from './components/user/Login';\nimport Register from './components/user/Register';\nimport Setting from './components/user/Setting';\nimport Watchlist from './components/user/Watchlist';\n\n// CSS\nimport './css/main.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // https://react-bootstrap.github.io/getting-started/introduction/\n\n// Utils \nimport {\n    isAuthenticated\n} from './utils/auth';\n\n// API endpoints\nconst yearly_api = `${process.env.REACT_APP_get_yearly_stock_url}`;\nconst dow30_api = `${process.env.REACT_APP_get_dow30_stock_url}`;\nconst watchlist_api = `${process.env.REACT_APP_post_user_watchlist_url}`;\n\n// Implement Routing\nconst routing = (\n    <Router>\n        <Header />\n        <Switch>\n            <Route exact path=\"/\" component={props =>\n                isAuthenticated() ? <WatchlistCharts api={watchlist_api} /> : <Wrapper api={dow30_api} symbol=\"\" />\n            } />\n            <Route exact path=\"/search/:stock\" component={props =>\n                <Wrapper api={yearly_api} symbol={props.match.params.stock} />\n            } />\n            <Route exact path=\"/login\" component={props =>\n                !isAuthenticated() ? <Login /> : <Notfound />\n            } />\n            <Route exact path=\"/register\" component={props =>\n                !isAuthenticated() ? <Register /> : <Notfound />\n            } />\n            <Route exact path=\"/settings\" component={props =>\n                isAuthenticated() ? <Setting /> : <Notfound />\n            } />\n            <Route exact path=\"/watchlist\" component={props =>\n                isAuthenticated() ? <Watchlist /> : <Notfound />\n            } />\n            <Route exact path=\"/dow30\" component={props =>\n                <Wrapper api={dow30_api} symbol=\"\" />\n            } />\n            <Route component={Notfound} />\n        </Switch>\n    </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));"],"sourceRoot":""}