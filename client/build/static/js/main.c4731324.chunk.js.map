{"version":3,"sources":["model/User.js","utils/auth.js","components/header/Header.js","components/highcharts/StockChart.js","components/highcharts/LoadingSpinner.js","components/alert/Unavailable.js","components/highcharts/Wrapper.js","components/highcharts/WatchlistCharts.js","components/alert/Notfound.js","components/alert/GenericError.js","components/user/Login.js","components/user/Register.js","components/alert/Success.js","components/user/Setting.js","components/user/Watchlist.js","index.js"],"names":["User","id","username","firstName","lastName","isAuth","stocks","this","stock","push","isAuthenticated","localStorage","getItem","setSession","user","setItem","getIsAuth","getId","getUsername","getFirstName","getLastName","JSON","stringify","getStocks","Header","props","state","symbol","url","firstname","lastname","searchStock","bind","handleChange","logout","event","setState","target","value","e","preventDefault","toUpperCase","trim","history","clear","navbar","Navbar","sticky","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","Form","inline","onSubmit","FormControl","type","onChange","placeholder","Button","parse","disabled","onClick","React","Component","withRouter","StockChart","prices","chartOptions","title","series","colors","chart","backgroundColor","linearGradient","x1","y1","x2","y2","stops","style","fontFamily","plotBorderColor","subtitle","color","textTransform","xAxis","gridLineColor","labels","lineColor","minorGridLineColor","tickColor","yAxis","tickWidth","tooltip","plotOptions","dataLabels","fontSize","marker","boxplot","fillColor","candlestick","errorbar","legend","itemStyle","itemHoverStyle","itemHiddenStyle","credits","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","theme","fill","rangeSelector","buttonTheme","stroke","states","hover","select","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","borderColor","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","high","low","text","name","data","reverse","prepareChart","prevProps","options","highcharts","Highcharts","constructorType","LoadingSpinner","Spinner","animation","size","Unavailable","Alert","Heading","Wrapper","error","api","fetch","resp","status","json","fetchData","hasOwnProperty","stockCharts","dow","forEach","d","WatchlistCharts","watchlist","method","mode","headers","body","length","charts","Notfound","GenericError","Login","password","login","toRegister","process","user_id","Group","Label","Control","Register","register","toLogin","Success","message","Setting","ogUsername","updated","update","window","location","reload","settings","Fragment","Watchlist","prevStocks","addUserStock","deleteUserStock","userId","dataset","i","splice","Array","temp","lists","s","ListGroup","Item","data-stock","card","Card","monthly_api","dow30_api","watchlist_api","routing","exact","path","component","match","params","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4731324.chunk.js","sourcesContent":["class User {\n    constructor(id, username, firstName, lastName, isAuth, stocks) {\n        this.id = id;\n        this.username = username;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.isAuth = isAuth;\n        this.stocks = stocks;\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    getUsername() {\n        return this.username;\n    }\n\n    getFirstName() {\n        return this.firstName;\n    }\n\n    getLastName() {\n        return this.lastName;\n    }\n\n    getIsAuth() {\n        return this.isAuth;\n    }\n\n    getStocks() {\n        return this.stocks;\n    }\n\n    addStock(stock) {\n        this.stocks.push(stock);\n    }\n\n    setFirstName(firstName) {\n        this.firstName = firstName;\n    }\n\n    setLastName(lastName) {\n        this.lastName = lastName;\n    }\n}\n\nexport default User;\n","/**\n * Authentication + session helper\n */\nimport User from '../model/User';\n\n/**\n * Check if user is authenticated\n */\nexport const isAuthenticated = () => {\n    if (localStorage.getItem(\"isAuth\") === \"true\") {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Adds user info into localStorage\n */\nexport const setSession = (user) => {\n    localStorage.setItem('isAuth', user.getIsAuth());\n    localStorage.setItem('id', user.getId());\n    localStorage.setItem('username', user.getUsername());\n    localStorage.setItem('firstname', user.getFirstName());\n    localStorage.setItem('lastname', user.getLastName());\n    localStorage.setItem('stocks', JSON.stringify(user.getStocks()));\n}\n\n/**\n * Destroys all contents of localStorage\n */\nexport const destroySession = () => {\n    localStorage.clear();\n}\n\n/**\n * Gets user info from localStorage\n */\nexport const getUserInfo = () => {\n    return new User(\n        localStorage.getItem('id'),\n        localStorage.getItem('username'),\n        localStorage.getItem('firstname'),\n        localStorage.getItem('lastname'),\n        localStorage.getItem('isAuth'),\n        JSON.parse(localStorage.getItem('stocks'))\n    );\n}\n","import React from 'react';\nimport {\n\tNavbar,\n\tNav,\n\tForm,\n\tFormControl,\n\tButton\n} from \"react-bootstrap\";\nimport {\n\twithRouter\n} from \"react-router-dom\";\n\nimport {\n\tisAuthenticated,\n\tgetUserInfo,\n\tdestroySession\n} from '../../utils/auth';\n\nclass Header extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// Search value will be stored in state\n\t\tthis.state = {\n\t\t\tsymbol: '',\n\t\t\turl: '',\n\t\t\tfirstname: '',\n\t\t\tlastname: '',\n\t\t\tusername: ''\n\t\t};\n\n\t\t// Bind, so that 'this' can be used in the callback\n\t\tthis.searchStock = this.searchStock.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.logout = this.logout.bind(this);\n\t}\n\n\t// Dynamically updates the `symbol` stored in state on input change\n\thandleChange(event) {\n\t\tthis.setState({\n\t\t\tsymbol: event.target.value\n\t\t});\n\t}\n\n\t// Fires when form is submitted\n\tsearchStock(e) {\n\t\te.preventDefault();\n\n\t\t// Cleanup `symbol`\n\t\tlet symbol = this.state.symbol;\n\t\tsymbol = symbol.toUpperCase().trim();\n\n\t\t// Update `url` flag in state\n\t\tthis.setState({\n\t\t\turl: `/search/${symbol}`\n\t\t}, () => this.props.history.push(this.state.url));\n\t}\n\n\t// On click, log the user out\n\tlogout() {\n\t\tdestroySession();\n\n\t\t// Redirect to home\n\t\tthis.props.history.push(\"/\");\n\t}\n\n\trender() {\n\t\tlet navbar = (\n\t\t\t<Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n\t\t\t\t<Navbar.Brand href=\"/\">StocksWatch</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/login\">Login</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/register\">Register</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<Form inline onSubmit={this.searchStock}>\n\t\t\t\t\t\t<FormControl type=\"text\" value={this.state.symbol} onChange={this.handleChange} placeholder=\"Search a Symbol\" className=\"mr-sm-2\" />\n\t\t\t\t\t\t<Button variant=\"outline-info\" type=\"submit\">Search</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t);\n\n\t\t// Check if an user is logged in\n\t\tif (isAuthenticated()) {\n\t\t\tconst user = getUserInfo();\n\n\t\t\tnavbar = (\n\t\t\t\t<Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n\t\t\t\t\t<Navbar.Brand href=\"/\">StocksWatch</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t\t<Nav.Link disabled>\n\t\t\t\t\t\t\t\t<span id=\"name\">{user.getFirstName()} {user.getLastName()}</span>\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link href=\"/watchlist\">Watchlist</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link href=\"/settings\">Settings</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link onClick={this.logout} href=\"/\">Logout</Nav.Link>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t<Form inline onSubmit={this.searchStock}>\n\t\t\t\t\t\t\t<FormControl type=\"text\" value={this.state.symbol} onChange={this.handleChange} placeholder=\"Search a Symbol\" className=\"mr-sm-2\" />\n\t\t\t\t\t\t\t<Button variant=\"outline-info\" type=\"submit\">Search</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Navbar>\n\t\t\t);\n\t\t}\n\n\t\treturn navbar;\n\t}\n}\n\nexport default withRouter(Header);\n","import React from 'react';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts/highstock';\n\nclass StockChart extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsymbol: null,\n\t\t\tprices: null,\n\n\t\t\t// Highcharts configs\n\t\t\tchartOptions: {\n\t\t\t\t// Title\n\t\t\t\ttitle: {},\n\n\t\t\t\t// Data\n\t\t\t\tseries: [],\n\n\t\t\t\t// Theme - below is taken from https://github.com/highcharts/highcharts/blob/master/js/themes/dark-unica.js\n\t\t\t\tcolors: ['#2b908f', '#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066',\n\t\t\t\t\t'#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\n\t\t\t\tchart: {\n\t\t\t\t\tbackgroundColor: {\n\t\t\t\t\t\tlinearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n\t\t\t\t\t\tstops: [\n\t\t\t\t\t\t\t[0, '#2a2a2b'],\n\t\t\t\t\t\t\t[1, '#3e3e40']\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontFamily: '\\'Unica One\\', sans-serif'\n\t\t\t\t\t},\n\t\t\t\t\tplotBorderColor: '#606063'\n\t\t\t\t},\n\t\t\t\tsubtitle: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolor: '#E0E0E3',\n\t\t\t\t\t\ttextTransform: 'uppercase'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\tgridLineColor: '#707073',\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: '#E0E0E3'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tlineColor: '#707073',\n\t\t\t\t\tminorGridLineColor: '#505053',\n\t\t\t\t\ttickColor: '#707073',\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: '#A0A0A3'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\tgridLineColor: '#707073',\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: '#E0E0E3'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tlineColor: '#707073',\n\t\t\t\t\tminorGridLineColor: '#505053',\n\t\t\t\t\ttickColor: '#707073',\n\t\t\t\t\ttickWidth: 1,\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: '#A0A0A3'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.85)',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolor: '#F0F0F0'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tplotOptions: {\n\t\t\t\t\tseries: {\n\t\t\t\t\t\tdataLabels: {\n\t\t\t\t\t\t\tcolor: '#F0F0F3',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tfontSize: '13px'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmarker: {\n\t\t\t\t\t\t\tlineColor: '#333'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tboxplot: {\n\t\t\t\t\t\tfillColor: '#505053'\n\t\t\t\t\t},\n\t\t\t\t\tcandlestick: {\n\t\t\t\t\t\tlineColor: 'white'\n\t\t\t\t\t},\n\t\t\t\t\terrorbar: {\n\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.5)',\n\t\t\t\t\titemStyle: {\n\t\t\t\t\t\tcolor: '#E0E0E3'\n\t\t\t\t\t},\n\t\t\t\t\titemHoverStyle: {\n\t\t\t\t\t\tcolor: '#FFF'\n\t\t\t\t\t},\n\t\t\t\t\titemHiddenStyle: {\n\t\t\t\t\t\tcolor: '#606063'\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: '#C0C0C0'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcredits: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolor: '#666'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlabels: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolor: '#707073'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdrilldown: {\n\t\t\t\t\tactiveAxisLabelStyle: {\n\t\t\t\t\t\tcolor: '#F0F0F3'\n\t\t\t\t\t},\n\t\t\t\t\tactiveDataLabelStyle: {\n\t\t\t\t\t\tcolor: '#F0F0F3'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tnavigation: {\n\t\t\t\t\tbuttonOptions: {\n\t\t\t\t\t\tsymbolStroke: '#DDDDDD',\n\t\t\t\t\t\ttheme: {\n\t\t\t\t\t\t\tfill: '#505053'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trangeSelector: {\n\t\t\t\t\tbuttonTheme: {\n\t\t\t\t\t\tfill: '#505053',\n\t\t\t\t\t\tstroke: '#000000',\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: '#CCC'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstates: {\n\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\tfill: '#707073',\n\t\t\t\t\t\t\t\tstroke: '#000000',\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\t\tfill: '#000003',\n\t\t\t\t\t\t\t\tstroke: '#000000',\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tinputBoxBorderColor: '#505053',\n\t\t\t\t\tinputStyle: {\n\t\t\t\t\t\tbackgroundColor: '#333',\n\t\t\t\t\t\tcolor: 'silver'\n\t\t\t\t\t},\n\t\t\t\t\tlabelStyle: {\n\t\t\t\t\t\tcolor: 'silver'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tnavigator: {\n\t\t\t\t\thandles: {\n\t\t\t\t\t\tbackgroundColor: '#666',\n\t\t\t\t\t\tborderColor: '#AAA'\n\t\t\t\t\t},\n\t\t\t\t\toutlineColor: '#CCC',\n\t\t\t\t\tmaskFill: 'rgba(255,255,255,0.1)',\n\t\t\t\t\tseries: {\n\t\t\t\t\t\tcolor: '#7798BF',\n\t\t\t\t\t\tlineColor: '#A6C7ED'\n\t\t\t\t\t},\n\t\t\t\t\txAxis: {\n\t\t\t\t\t\tgridLineColor: '#505053'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tscrollbar: {\n\t\t\t\t\tbarBackgroundColor: '#808083',\n\t\t\t\t\tbarBorderColor: '#808083',\n\t\t\t\t\tbuttonArrowColor: '#CCC',\n\t\t\t\t\tbuttonBackgroundColor: '#606063',\n\t\t\t\t\tbuttonBorderColor: '#606063',\n\t\t\t\t\trifleColor: '#FFF',\n\t\t\t\t\ttrackBackgroundColor: '#404043',\n\t\t\t\t\ttrackBorderColor: '#404043'\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tprepareChart() {\n\t\tlet high = this.state.prices.high;\n\t\tlet low = this.state.prices.low;\n\n\t\t// Update the chartOptions in state\n\t\tthis.setState({\n\t\t\tchartOptions: {\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: `${this.state.symbol}`,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolor: '#E0E0E3',\n\t\t\t\t\t\ttextTransform: 'uppercase',\n\t\t\t\t\t\tfontSize: '20px'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tseries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: `${this.state.symbol} High Price`,\n\t\t\t\t\t\tdata: high.reverse()\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: `${this.state.symbol} Low Price`,\n\t\t\t\t\t\tdata: low.reverse()\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t}\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n\t\t// Populate the chart with the initial data\n\t\tconst data = this.props.data;\n\n\t\tthis.setState({\n\t\t\tsymbol: data.symbol,\n\t\t\tprices: data.prices\n\t\t}, () => this.prepareChart());\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// While componentDidUpdate() will fire whenever the data passed in this component has changed, we only care when the data is changed for single stock data\n\t\tif (this.props.type === \"single\") {\n\t\t\tlet prevSymbol = prevProps.data.symbol;\n\t\t\tlet currSymbol = this.props.data.symbol;\n\n\t\t\t// Check if the symbol in props are different\n\t\t\tif (prevSymbol !== currSymbol) {\n\t\t\t\tconst data = this.props.data;\n\n\t\t\t\t// Update the state and then reload the chart\n\t\t\t\tthis.setState({\n\t\t\t\t\tsymbol: data.symbol,\n\t\t\t\t\tprices: data.prices\n\t\t\t\t}, () => this.prepareChart());\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<HighchartsReact\n\t\t\t\toptions={this.state.chartOptions}\n\t\t\t\thighcharts={Highcharts}\n\t\t\t\tconstructorType={'stockChart'}\n\t\t\t/>\n\t\t)\n\t}\n}\n\nexport default StockChart;","import React from 'react';\nimport {\n    Spinner\n} from 'react-bootstrap';\n\nimport '../../css/main.css';\n\nclass LoadingSpinner extends React.Component {\n    render() {\n        return (\n            <div className=\"spinner\">\n                <Spinner className=\"spin\" animation=\"border\" variant=\"info\" size=\"lg\">\n                </Spinner>\n            </div>\n        )\n    }\n}\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport {\n    Alert\n} from 'react-bootstrap';\n\nclass Unavailable extends React.Component {\n    render() {\n        return (\n            <Alert variant=\"danger\">\n                <Alert.Heading>Service Unavailable</Alert.Heading>\n                <p>There has been an error. Please try again.</p>\n            </Alert>\n        )\n    }\n}\n\nexport default Unavailable;\n","import React from 'react';\nimport StockChart from './StockChart';\nimport LoadingSpinner from './LoadingSpinner';\nimport Unavailable from '../alert/Unavailable';\nimport {\n\tAlert\n} from 'react-bootstrap';\n\nclass Wrapper extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdata: \"\",\n\t\t\terror: false\n\t\t};\n\t}\n\n\tasync fetchData() {\n\t\t// Get props\n\t\tconst api = this.props.api + \"/\" + this.props.symbol;\n\n\t\t// GET data from server\n\t\ttry {\n\t\t\tconst resp = await fetch(api);\n\n\t\t\t// On 200 status\n\t\t\tif (resp.status === 200) {\n\t\t\t\tconst json = await resp.json();\n\n\t\t\t\t// Set the data returned from fetch in state\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: json\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// On 500 status\n\t\t\tif (resp.status === 500) {\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: true\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.setState({\n\t\t\t\terror: true\n\t\t\t})\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// Grab the data from the server to render the graphs in the component\n\t\tthis.fetchData();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// Check if symbol has changed\n\t\tif (prevProps.symbol !== this.props.symbol) {\n\t\t\tthis.fetchData();\n\t\t}\n\t}\n\n\trender() {\n\t\t// Check if data in state is still an empty string\n\t\tif (this.state.data !== \"\") {\n\t\t\tlet json = this.state.data;\n\n\t\t\t// Check if json is DOW30\n\t\t\tif (json.hasOwnProperty(\"DOW30\")) {\n\t\t\t\tlet stockCharts = [];\n\t\t\t\tlet dow = json[\"DOW30\"];\n\n\t\t\t\tstockCharts.push(\n\t\t\t\t\t<Alert variant=\"info\">\n\t\t\t\t\t\t<Alert.Heading>Dow 30</Alert.Heading>\n\t\t\t\t\t\t<p>Login or Register to build your personalized watchlist</p>\n\t\t\t\t\t</Alert>\n\t\t\t\t)\n\n\t\t\t\t// Render each DOW stock as its own StockChart component\n\t\t\t\tdow.forEach(d => {\n\t\t\t\t\tstockCharts.push(<StockChart data={d} type=\"multiple\" />);\n\t\t\t\t});\n\n\t\t\t\treturn stockCharts;\n\t\t\t}\n\t\t\t// Else, the json passed into the component is data for only one stock\n\t\t\telse {\n\t\t\t\treturn <StockChart data={json} type=\"single\" />;\n\t\t\t}\n\t\t}\n\n\t\t// Check for error from server\n\t\tif (this.state.error) {\n\t\t\treturn <Unavailable />;\n\t\t}\n\n\t\t// Temporary DOM element until the date is ready\n\t\treturn <LoadingSpinner />;\n\t}\n}\n\nexport default Wrapper;\n","import React from 'react';\nimport StockChart from './StockChart';\nimport LoadingSpinner from './LoadingSpinner';\nimport Unavailable from '../alert/Unavailable';\nimport {\n    Alert\n} from 'react-bootstrap';\n\nclass WatchlistCharts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            watchlist: [],\n            data: \"\",\n            error: false\n        };\n    }\n\n    async fetchData() {\n        const api = this.props.api;\n\n        try {\n            // Send a POST to server, so that server can query for the stock(s) data\n            const resp = await fetch(api, {\n                method: 'POST',\n                mode: 'cors',\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(\n                    { \"watchlist\": localStorage.getItem(\"stocks\") }\n                )\n            });\n\n            // Check HTTP status code\n            if (resp.status === 200) {\n                const json = await resp.json();\n\n                this.setState({\n                    data: json\n                });\n            }\n\n            if (resp.status === 500) {\n                this.setState({\n                    error: true\n                });\n            }\n\n        } catch (err) {\n            this.setState({\n                error: true\n            })\n        }\n    }\n\n    componentDidMount() {\n        // Get the stocks of the user in localStorage \n        const stocks = JSON.parse(localStorage.getItem('stocks'));\n\n        this.setState({\n            watchlist: stocks\n        }, () => this.fetchData());\n    }\n\n    render() {\n        // Check if the user has stocks listed in their watchlist\n        if (this.state.watchlist.length > 0 && this.state.data !== \"\") {\n            let json = this.state.data;\n\n            if (json.hasOwnProperty(\"watchlist\")) {\n                let charts = [];\n                let watchlist = json[\"watchlist\"];\n\n                watchlist.forEach(d => {\n                    charts.push(<StockChart data={d} type=\"multiple\" />);\n                });\n\n                return charts;\n            }\n        }\n\n        // Show alert message to let users know about adding to watchlist\n        if (this.state.watchlist.length === 0) {\n            return (\n                <Alert variant=\"warning\">\n                    <Alert.Heading>Your watchlist is empty!</Alert.Heading>\n                    <p>\n                        Go <a href=\"/watchlist\">here</a> to start building your watchlist\n                    </p>\n                </Alert>\n            )\n        }\n\n        // Check for error from server\n        if (this.state.error) {\n            return <Unavailable />;\n        }\n\n        // Default to render a spinner\n        return <LoadingSpinner />;\n    }\n}\n\nexport default WatchlistCharts;","import React from 'react';\nimport {\n    Alert\n} from 'react-bootstrap';\n\nclass Notfound extends React.Component {\n    render() {\n        return (\n            <Alert variant=\"danger\">\n                <Alert.Heading>Page Not Found</Alert.Heading>\n                <p>The page you are looking for does not exist!</p>\n            </Alert>\n        )\n    }\n}\n\nexport default Notfound;\n","import React from 'react';\nimport {\n    Alert\n} from 'react-bootstrap';\n\nclass GenericError extends React.Component {\n    render() {\n        return (\n            <Alert variant=\"danger\">\n                <Alert.Heading>An Error Has Occurred</Alert.Heading>\n                <p>There has been an error. Please try again.</p>\n            </Alert>\n        )\n    }\n}\n\nexport default GenericError;\n","import React from 'react';\nimport {\n    Form,\n    Button\n} from 'react-bootstrap';\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport GenericError from '../alert/GenericError';\nimport User from '../../model/User';\nimport {\n    setSession\n} from '../../utils/auth';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            error: false\n        };\n\n        // Bind methods\n        this.handleChange = this.handleChange.bind(this);\n        this.login = this.login.bind(this);\n        this.toRegister = this.toRegister.bind(this);\n    }\n\n    handleChange(e) {\n        let name = e.target.name;\n        let value = e.target.value;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    // Takes the input values from the form to authenticate user\n    async login(e) {\n        e.preventDefault();\n\n        // Validate the inputs\n        let username = this.state.username;\n        let password = this.state.password;\n\n        username = username.trim();\n        password = password.trim();\n\n        // Fire POST request\n        let url = `${process.env.REACT_APP_SERVER_DOMAIN}/api/login`;\n\n        try {\n            const resp = await fetch(url, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    \"username\": username,\n                    \"password\": password\n                })\n            });\n\n            // Check for 200\n            if (resp.status === 200) {\n                const json = await resp.json();\n\n                // Instantiate User\n                const user = new User(json.user_id, json.username, json.firstname, json.lastname, true, json.stocks);\n\n                // Set user session\n                setSession(user);\n\n                // Redirect to home\n                this.props.history.push(\"/\");\n            }\n\n            // On 500 status\n            if (resp.status === 500) {\n                this.setState({\n                    error: true\n                });\n            }\n        } catch (err) {\n            this.setState({\n                error: true\n            });\n        }\n    }\n\n    // Redirects user to /register\n    toRegister() {\n        this.props.history.push(\"/register\");\n    }\n\n    render() {\n        // Check if error\n        if (this.state.error) {\n            return <GenericError />;\n        }\n\n        return (\n            <div id=\"login\">\n                <Form onSubmit={this.login}>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" placeholder=\"Enter username\" onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Button variant=\"info\" type=\"submit\">\n                        Login\n                    </Button>\n\n                    <span className=\"space\"></span>\n\n                    <Button variant=\"outline-info\" onClick={this.toRegister}>\n                        Register\n                    </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport {\n    Form,\n    Button\n} from 'react-bootstrap';\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport GenericError from '../alert/GenericError';\nimport User from '../../model/User';\nimport {\n    setSession\n} from '../../utils/auth';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            firstname: '',\n            lastname: '',\n            error: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.register = this.register.bind(this);\n        this.toLogin = this.toLogin.bind(this);\n    }\n\n    handleChange(e) {\n        let name = e.target.name;\n        let value = e.target.value;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    // Takes the input in the form to register the user\n    async register(e) {\n        e.preventDefault();\n\n        // Validate inputs\n        let username = this.state.username;\n        let password = this.state.password;\n        let firstname = this.state.firstname;\n        let lastname = this.state.lastname;\n\n        username = username.trim();\n        password = password.trim();\n        firstname = firstname.trim();\n        lastname = lastname.trim();\n\n        // Fire POST request\n        const url = `${process.env.REACT_APP_SERVER_DOMAIN}/api/register`;\n\n        try {\n            const resp = await fetch(url, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    \"username\": username,\n                    \"password\": password,\n                    \"firstname\": firstname,\n                    \"lastname\": lastname\n                })\n            });\n\n            // On 200 status\n            if (resp.status === 200) {\n                const json = await resp.json();\n                let id = json.id;\n\n                // Instantiate User\n                const user = new User(id, username, firstname, lastname, true, []);\n\n                // Set user session\n                setSession(user);\n\n                // Redirect to home\n                this.props.history.push(\"/\");\n            }\n\n            // On 500 status\n            if (resp.status === 500) {\n                this.setState({\n                    error: true\n                });\n            }\n        } catch (err) {\n            this.setState({\n                error: true\n            });\n        }\n    }\n\n    // Redirects user to /login\n    toLogin() {\n        this.props.history.push(\"/login\");\n    }\n\n    render() {\n        // Check if error\n        if (this.state.error) {\n            return <GenericError />;\n        }\n\n        return (\n            <div id=\"login\">\n                <Form onSubmit={this.register}>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter username\" name=\"username\" onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter first name\" name=\"firstname\" onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter last name\" name=\"lastname\" onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Button variant=\"info\" type=\"submit\">\n                        Register\n                    </Button>\n\n                    <span className=\"space\"></span>\n\n                    <Button variant=\"outline-info\" onClick={this.toLogin}>\n                        Login\n                    </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Register);","import React from 'react';\nimport {\n    Alert\n} from 'react-bootstrap';\n\nclass Success extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Alert variant=\"success\">\n                <Alert.Heading>Success!</Alert.Heading>\n                <p>{this.props.message}</p>\n            </Alert>\n        )\n    }\n}\n\nexport default Success;\n","import React from 'react';\nimport {\n   Form,\n   Button\n} from 'react-bootstrap';\nimport {\n   withRouter\n} from 'react-router-dom';\n\nimport GenericError from '../alert/GenericError';\nimport Success from '../alert/Success';\nimport User from '../../model/User';\nimport {\n   setSession\n} from '../../utils/auth';\n\nclass Setting extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         ogUsername: localStorage.getItem(\"username\"),\n         username: localStorage.getItem(\"username\"),\n         firstname: localStorage.getItem(\"firstname\"),\n         lastname: localStorage.getItem(\"lastname\"),\n         password: \"\",\n         error: false,\n         updated: false\n      };\n\n      this.handleChange = this.handleChange.bind(this);\n      this.update = this.update.bind(this);\n   }\n\n   handleChange(e) {\n      let name = e.target.name;\n      let value = e.target.value;\n\n      this.setState({\n         [name]: value\n      })\n   }\n\n   async update() {\n      let error = false;\n\n      // Validate inputs\n      let username = this.state.username;\n      let password = this.state.password;\n      let firstname = this.state.firstname;\n      let lastname = this.state.lastname;\n\n      username = username.trim();\n      password = password.trim();\n      firstname = firstname.trim();\n      lastname = lastname.trim();\n\n      if (username.length === 0 ||\n         password.length === 0 ||\n         firstname.length === 0 ||\n         lastname.length === 0) {\n         error = true;\n      }\n\n      if (!error) {\n         // Send UPDATE to server\n         const url = `${process.env.REACT_APP_SERVER_DOMAIN}/api/user`;\n\n         try {\n            const resp = await fetch(url, {\n               method: 'PUT',\n               mode: \"cors\",\n               headers: { \"Content-Type\": \"application/json\" },\n               body: JSON.stringify({\n                  \"ogUsername\": this.state.ogUsername,\n                  \"username\": username,\n                  \"password\": password,\n                  \"firstname\": firstname,\n                  \"lastname\": lastname\n               })\n            });\n\n            // On 200 status\n            if (resp.status === 200) {\n               const json = await resp.json();\n\n               // Update user in localStorage\n               const user = new User(localStorage.getItem(\"id\"), json.username, json.firstname, json.lastname, localStorage.getItem(\"isAuth\"), JSON.parse(localStorage.getItem(\"stocks\")));\n               setSession(user);\n\n               this.setState({\n                  ogUsername: user.getUsername(),\n                  username: user.getUsername(),\n                  firstname: user.getFirstName(),\n                  lastname: user.getLastName(),\n                  updated: true\n               })\n\n               window.location.reload(false);\n            }\n\n            // On 500 status\n            if (resp.status === 500) {\n               this.setState({\n                  error: true\n               });\n            }\n         } catch (err) {\n            this.setState({\n               error: true\n            });\n         }\n      } else {\n         this.setState({\n            error: true\n         })\n      }\n   }\n\n   render() {\n      // Check if error\n      if (this.state.error) {\n         return <GenericError />;\n      }\n\n      let settings = (\n         <div id=\"settings\">\n            <Form>\n               <Form.Group>\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control type=\"text\" value={this.state.username} name=\"username\" onChange={this.handleChange} />\n               </Form.Group>\n               <Form.Group>\n                  <Form.Label>First Name</Form.Label>\n                  <Form.Control type=\"text\" value={this.state.firstname} name=\"firstname\" onChange={this.handleChange} />\n               </Form.Group>\n               <Form.Group>\n                  <Form.Label>Last Name</Form.Label>\n                  <Form.Control type=\"text\" value={this.state.lastname} name=\"lastname\" onChange={this.handleChange} />\n               </Form.Group>\n               <Form.Group>\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n               </Form.Group>\n               <div className=\"buttons\">\n                  <Button variant=\"info\" onClick={this.update}>Update</Button>\n               </div>\n            </Form>\n         </div>\n      );\n\n      // Check if updated\n      if (this.state.updated) {\n         return (\n            <React.Fragment>\n               <Success message=\"Your settings have been updated!\" />\n               {settings}\n            </React.Fragment>\n         )\n      }\n\n      return settings;\n   }\n}\n\nexport default withRouter(Setting);\n","import React from 'react';\nimport {\n    Form,\n    Button,\n    Card,\n    ListGroup\n} from 'react-bootstrap';\n\nimport GenericError from '../alert/GenericError';\nimport '../../css/main.css';\n\nclass Watchlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stock: '',\n            prevStocks: [],\n            error: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.addUserStock = this.addUserStock.bind(this);\n        this.deleteUserStock = this.deleteUserStock.bind(this);\n    }\n\n    handleChange(e) {\n        let name = e.target.name;\n        let value = e.target.value;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    componentDidMount() {\n        // Get the stocks of the user in localStorage \n        const stocks = JSON.parse(localStorage.getItem('stocks'));\n\n        if (stocks.length > 0) {\n            this.setState({\n                prevStocks: stocks\n            })\n        }\n    }\n\n    // Takes the inputted stock and POSTs it to the server\n    async addUserStock(e) {\n        e.preventDefault();\n\n        // Validate\n        let stock = this.state.stock;\n        let userId = localStorage.getItem(\"id\");\n        stock = stock.trim().toUpperCase();\n\n        // Fire POST \n        let url = `${process.env.REACT_APP_SERVER_DOMAIN}/api/watchlist/add`;\n\n        try {\n            const resp = await fetch(url, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    \"userId\": userId,\n                    \"stock\": stock\n                })\n            });\n\n            // On 200 status\n            if (resp.status === 200) {\n                const json = await resp.json();\n\n                // Add stock to localStorage / session\n                let symbol = json.symbol;\n\n                let stocks = JSON.parse(localStorage.getItem(\"stocks\"));\n                stocks.push(symbol);\n\n                stocks = JSON.stringify(stocks);\n                localStorage.setItem(\"stocks\", stocks);\n\n                // Update state\n                this.setState({\n                    prevStocks: JSON.parse(localStorage.getItem('stocks'))\n                })\n            }\n\n            // On 500 status\n            if (resp.status === 500) {\n                this.setState({\n                    error: true\n                });\n            }\n        } catch (err) {\n            this.setState({\n                error: true\n            });\n        }\n    }\n\n    async deleteUserStock(e) {\n        e.preventDefault();\n\n        // Validate\n        let stock = e.target.dataset.stock;\n        let userId = localStorage.getItem(\"id\");\n        stock = stock.trim().toUpperCase();\n\n        // Fire DELETE\n        let url = `${process.env.REACT_APP_SERVER_DOMAIN}/api/watchlist/remove`;\n\n        try {\n            const resp = await fetch(url, {\n                method: \"DELETE\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    \"userId\": userId,\n                    \"stock\": stock\n                })\n            });\n\n            // On 200 status\n            if (resp.status === 200) {\n                const json = await resp.json();\n\n                // Remove stock from localStorage / session\n                let symbol = json.symbol;\n                let stocks = JSON.parse(localStorage.getItem(\"stocks\"));\n\n                // Remove \n                for (let i = 0; i < stocks.length; i++) {\n                    if (stocks[i] === symbol) {\n                        stocks.splice(i, 1);\n                    }\n                }\n\n                stocks = JSON.stringify(stocks);\n                localStorage.setItem(\"stocks\", stocks);\n\n                // Update state\n                this.setState({\n                    prevStocks: JSON.parse(localStorage.getItem('stocks'))\n                })\n            }\n\n            if (resp.status === 500) {\n                this.setState({\n                    error: true\n                });\n            }\n        } catch (err) {\n            this.setState({\n                error: true\n            });\n        }\n    }\n\n\n    render() {\n        // Check if error\n        if (this.state.error) {\n            return <GenericError />;\n        }\n\n        let watchlist = (\n            <Form onSubmit={this.addUserStock}>\n                <Form.Group>\n                    <Form.Label>Stock</Form.Label>\n                    <Form.Control type=\"text\" name=\"stock\" placeholder=\"Enter a Stock Ticker Symbol\" onChange={this.handleChange} />\n                </Form.Group>\n\n                <Button variant=\"info\" type=\"submit\">\n                    Add\n                </Button>\n            </Form>\n        );\n\n        // If there are stocks in the user's watchlist already, show them here\n        if (this.state.prevStocks instanceof Array && this.state.prevStocks.length > 0) {\n            // Build the component(s) to be rendered\n            let temp = watchlist;\n            watchlist = [];\n            watchlist.push(temp);\n\n            // Each stock in prevStocks will exist in a ListGroup component\n            let lists = [];\n            this.state.prevStocks.forEach(s => {\n                lists.push(\n                    <React.Fragment>\n                        <ListGroup.Item variant=\"info\">\n                            <span>{s}</span>\n                            <span className=\"float-right\">\n                                <Button data-stock={s} variant=\"danger\" size=\"sm\" onClick={this.deleteUserStock}>Remove</Button>\n                            </span>\n                        </ListGroup.Item>\n                    </React.Fragment>\n                );\n            });\n\n            // Add the lists to a Card component\n            let card = (\n                <React.Fragment>\n                    <br />\n                    <Form.Label>Currently Watched Stocks</Form.Label>\n                    <Card bg=\"info\">\n                        <ListGroup variant=\"flush\">\n                            {lists}\n                        </ListGroup>\n                    </Card>\n                </React.Fragment>\n            );\n\n            watchlist.push(card);\n            watchlist = (\n                <div id=\"watchlist\">\n                    {watchlist}\n                </div>\n            );\n\n            return watchlist;\n        }\n\n        return (\n            <div id=\"watchlist\">\n                {watchlist}\n            </div>\n        );\n    }\n}\n\nexport default Watchlist;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n// Components\nimport Header from './components/header/Header';\nimport Wrapper from './components/highcharts/Wrapper';\nimport WatchlistCharts from './components/highcharts/WatchlistCharts';\nimport Notfound from './components/alert/Notfound';\nimport Login from './components/user/Login';\nimport Register from './components/user/Register';\nimport Setting from './components/user/Setting';\nimport Watchlist from './components/user/Watchlist';\n\n// CSS\nimport './css/main.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // https://react-bootstrap.github.io/getting-started/introduction/\n\n// Utils \nimport {\n    isAuthenticated\n} from './utils/auth';\n\n// API endpoints\nconst monthly_api = `${process.env.REACT_APP_SERVER_DOMAIN}/api/monthly`;\nconst dow30_api = `${process.env.REACT_APP_SERVER_DOMAIN}/api/dow30`;\nconst watchlist_api = `${process.env.REACT_APP_SERVER_DOMAIN}/api/watchlist/stocks`;\n\n// Implement Routing\nconst routing = (\n    <Router>\n        <Header />\n        <Switch>\n            <Route exact path=\"/\" component={props =>\n                isAuthenticated() === true ? <WatchlistCharts api={watchlist_api} /> : <Wrapper api={dow30_api} symbol=\"\" />\n            } />\n            <Route exact path=\"/search/:stock\" component={props =>\n                <Wrapper api={monthly_api} symbol={props.match.params.stock} />\n            } />\n            <Route exact path=\"/login\" component={props =>\n                isAuthenticated() === false ? <Login /> : <Notfound />\n            } />\n            <Route exact path=\"/register\" component={props =>\n                isAuthenticated() === false ? <Register /> : <Notfound />\n            } />\n            <Route exact path=\"/settings\" component={props =>\n                isAuthenticated() === true ? <Setting /> : <Notfound />\n            } />\n            <Route exact path=\"/watchlist\" component={props =>\n                isAuthenticated() === true ? <Watchlist /> : <Notfound />\n            } />\n        </Switch>\n    </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));"],"sourceRoot":""}